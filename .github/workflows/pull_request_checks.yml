name: "Pull Request Checks"

on:
  pull_request:

jobs:
  ##
  # install
  ##

  install:
    name: "Install"
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies

  ##
  # validation
  ##

  validate_pr_title:
    name: "Validate PR Title"
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "📥 Get PR Title"
        id: get_pr_title
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            return data.title;
      - name: "✅ Validate"
        run: echo "${{ steps.get_pr_title.outputs.result }}" | pnpm commitlint

  ##
  # lint, type-check, build and test
  ##

  lint:
    name: "Lint"
    needs: [install, validate_pr_title]
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "👕 Lint"
        run: pnpm lint

# TODO: disable until chakra-ui is updated
#  type_check:
#    name: "Type Check"
#    needs: [install, validate_pr_title]
#    runs-on: ubuntu-latest
#    steps:
#      - name: "🛎 Checkout"
#        uses: actions/checkout@v4
#      - name: "🔧 Setup"
#        uses: ./.github/actions/use-pnpm-dependencies
#      - name: "🔍 Type Check"
#        run: pnpm check:types

  test:
    name: "Test"
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "🧪 Test"
        run: pnpm test

  ##
  # build
  ##

  build_chrome:
    name: "Build Chrome"
    needs: [install, validate_pr_title]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: pnpm build:chrome

  build_edge:
    name: "Build Edge"
    needs: [install, validate_pr_title]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: pnpm build:edge

  build_firefox:
    name: "Build Firefox"
    needs: [install, validate_pr_title]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: pnpm build:firefox
      - name: "✅ Validate"
        run: pnpm validate:firefox

  build_opera:
    name: "Build Opera"
    needs: [install, validate_pr_title]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-pnpm-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: pnpm build:opera
